<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer focusEnabled="false" 
				xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:validators="components.validators.*"
				autoDrawBackground="false"
				creationComplete="init()">
	<fx:Script>
		<![CDATA[
			import events.InputChangeEvent;
			import vo.AnswerVariant;
			
			import mx.events.ValidationResultEvent;
			
			private static var _resultIndexes : Array;
			
			public static function set resultIndexes(value : Array) : void {
				for (var i : int = 0; i < value.length; i++) {
					var answer : AnswerVariant = value[i] as AnswerVariant;
					var values : Array = answer.splitValue;
					for (var j : int = 0; j < values.length; j++)
						_resultIndexes[values[j] - 1] = i + 1;
				}
			}
			
			public static function get resultIndexes() : Array {
				return _resultIndexes;
			}
			
			public static function get answersCount() : int {
				return RankValidator.answersCount;
			}
			
			public static function get invalidAnswerNumber() : int {
				return RankValidator.invalidAnswerNumber;
			}
			
			public static function get breachContinuity() : Boolean {
				return RankValidator.breachContinuity;
			}
			
			public static function reset() : void {
				_resultIndexes = [];
				RankValidator.reset(AnswerVariant.MaxRank, !AnswerVariant.IsRatingQuestion);
			}
			
			public static function areSymbolValid(itemIndex : int) : Boolean {
				return RankValidator.areSymbolValid(itemIndex);
			}

			private function validHandler(event : ValidationResultEvent):void {
				_resultIndexes[itemIndex] = rateNumber.text;
				dispatchEvent(new InputChangeEvent(InputChangeEvent.INPUT_CHANGHED, itemIndex, rateNumber.text));
			}
			
			private function init () : void {
				lbl.text = this.data.QuestionText;
				rateNumber.text = _resultIndexes[itemIndex];
				rankValidator.validate();
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<validators:RankValidator id="rankValidator"
				source="{rateNumber}" property="text"
				itemIndex="{itemIndex}"
				triggerEvent=""
				required="false"
				valid="validHandler(event);" />
	</fx:Declarations>

	<s:HGroup verticalAlign="middle" verticalCenter="0" left="3" right="3"
			  top="0" bottom="0" fontSize="14">
		<s:TextInput id="rateNumber" maxChars="2" width="20" change="rankValidator.validate()" />
		
		<s:Label id="lbl" />
	</s:HGroup>
	
</s:ItemRenderer>
