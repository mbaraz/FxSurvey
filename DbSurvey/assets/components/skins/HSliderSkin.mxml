<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin name="CustomHSliderSkin"
			 xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 minHeight="11"
			 alpha.disabled="0.5">
	<!-- states -->
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
	</s:states>

	<fx:Metadata>
		[HostComponent("components.renderers.controls.GridSlider")]
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.collections.ArrayCollection;
			/* Define the skin elements that should not be colorized. 
			For slider, the skin itself is colorized but the individual parts are not. */
			static private const exclusions:Array = ["track", "thumb"];
/* 			
			[Bindable]
			private var labels:ArrayCollection = new ArrayCollection([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]);
 */			
			override public function get colorizeExclusions():Array {
				return exclusions;
			}
			
			override protected function initializationComplete():void {
				useChromeColor = true;
				super.initializationComplete();
			}
		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			override protected function measure() : void {
				// Temporarily move the thumb to the left of the Slider so measurement
				// doesn't factor in its x position. This allows resizing the
				// HSlider to less than 100px in width. 
				var thumbPos:Number = thumb.getLayoutBoundsX();
				thumb.setLayoutBoundsPosition(0, thumb.getLayoutBoundsY());
				super.measure();
				thumb.setLayoutBoundsPosition(thumbPos, thumb.getLayoutBoundsY());
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!--- The tooltip used in the mx.controls.Slider control. 
		To customize the DataTip's appearance, create a custom HSliderSkin class.-->
		<fx:Component id="dataTip">     
			<s:DataRenderer minHeight="24" minWidth="40" y="-34">  
				<s:Rect top="0" left="0" right="0" bottom="0">
					<s:fill>
						<s:SolidColor color="0x000000" alpha=".9"/>
					</s:fill>
					<s:filters>
						<s:DropShadowFilter angle="90" color="0x999999" distance="3"/>
					</s:filters>
				</s:Rect>
				<s:Label id="labelDisplay" text="{data}"
						 horizontalCenter="0" verticalCenter="1"
						 left="5" right="5" top="5" bottom="5"
						 textAlign="center" verticalAlign="middle"
						 fontWeight="normal" color="white" fontSize="11" />
			</s:DataRenderer>
		</fx:Component>
	</fx:Declarations>
<!--
	<s:DataGroup dataProvider="{labels}" itemRenderer="spark.skins.spark.DefaultItemRenderer"
				 width="100%">
		<s:layout>
			<s:HorizontalLayout />
		</s:layout>
	</s:DataGroup>
-->	
	<!--- The default skin class is HSliderTrackSkin. -->
	<s:Button id="track" left="0" right="0" top="0" bottom="0" minWidth="33" width="100"  alpha="0.1"
			  skinClass="spark.skins.spark.HSliderTrackSkin" />
	
	<!--- The default skin class is HSliderThumbSkin. -->
	<s:Button id="thumb" top="0" bottom="0"
			  color="#999999" fontWeight="bold"
			  skinClass="spark.skins.spark.ButtonSkin"
			  label="{hostComponent.labels.getItemAt(hostComponent.value - 1).toString()}"
			  width="{hostComponent.buttonWidth}" />

</s:SparkSkin>
